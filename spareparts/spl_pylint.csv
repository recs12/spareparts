************* Module spareparts.spl
spl.py:28:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:29:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:30:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:31:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:32:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:33:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:36:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:37:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:38:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:40:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:41:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:42:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:43:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:44:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:44:30: C0326: Exactly one space required after comma
        df = df[['item_number','possibility']]
                              ^ (bad-whitespace)
spl.py:45:0: W0311: Bad indentation. Found 8 spaces, expected 4 (bad-indentation)
spl.py:52:10: C0326: Exactly one space required before assignment
        t1= dt.now()
          ^ (bad-whitespace)
spl.py:54:10: C0326: Exactly one space required before assignment
        t2= dt.now()
          ^ (bad-whitespace)
spl.py:63:23: C0326: Exactly one space required after comma
    if answer in ['yes','y','YES','Y']:
                       ^ (bad-whitespace)
spl.py:63:27: C0326: Exactly one space required after comma
    if answer in ['yes','y','YES','Y']:
                           ^ (bad-whitespace)
spl.py:63:33: C0326: Exactly one space required after comma
    if answer in ['yes','y','YES','Y']:
                                 ^ (bad-whitespace)
spl.py:72:0: C0301: Line too long (101/100) (line-too-long)
spl.py:73:22: C0326: No space allowed after bracket
    df = pd.read_excel( location_jde ,
                      ^ (bad-whitespace)
spl.py:73:37: C0326: No space allowed before comma
    df = pd.read_excel( location_jde ,
                                     ^ (bad-whitespace)
spl.py:75:35: C0326: Exactly one space required after comma
                        skiprows=[0,1,2,3],
                                   ^ (bad-whitespace)
spl.py:75:37: C0326: Exactly one space required after comma
                        skiprows=[0,1,2,3],
                                     ^ (bad-whitespace)
spl.py:75:39: C0326: Exactly one space required after comma
                        skiprows=[0,1,2,3],
                                       ^ (bad-whitespace)
spl.py:76:59: C0326: No space allowed before comma
                        usecols="A,C,P,E,H,I,K,O,AR,AT,CB" ,
                                                           ^ (bad-whitespace)
spl.py:77:50: C0326: Exactly one space required after comma
                        dtype={'Business Unit':int,'Unit Cost': float }
                                                  ^ (bad-whitespace)
spl.py:77:70: C0326: No space allowed before bracket
                        dtype={'Business Unit':int,'Unit Cost': float }
                                                                      ^ (bad-whitespace)
spl.py:87:0: C0301: Line too long (113/100) (line-too-long)
spl.py:88:27: C0326: Exactly one space required after comma
        if answer in ['yes','y','YES','Y']:
                           ^ (bad-whitespace)
spl.py:88:31: C0326: Exactly one space required after comma
        if answer in ['yes','y','YES','Y']:
                               ^ (bad-whitespace)
spl.py:88:37: C0326: Exactly one space required after comma
        if answer in ['yes','y','YES','Y']:
                                     ^ (bad-whitespace)
spl.py:102:0: C0330: Wrong continued indentation (add 3 spaces).
                    delimiter='\t',
                    ^  | (bad-continuation)
spl.py:103:0: C0330: Wrong continued indentation (add 3 spaces).
                    skiprows=[0,2], 
                    ^  | (bad-continuation)
spl.py:103:35: C0303: Trailing whitespace (trailing-whitespace)
spl.py:103:31: C0326: Exactly one space required after comma
                    skiprows=[0,2], 
                               ^ (bad-whitespace)
spl.py:104:0: C0330: Wrong continued indentation (add 3 spaces).
                    header=1,
                    ^  | (bad-continuation)
spl.py:105:0: C0330: Wrong continued indentation (add 3 spaces).
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                    ^  | (bad-continuation)
spl.py:105:0: C0301: Line too long (103/100) (line-too-long)
spl.py:105:25: C0326: No space allowed after keyword argument assignment
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                         ^ (bad-whitespace)
spl.py:105:41: C0326: Exactly one space required after comma
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                                         ^ (bad-whitespace)
spl.py:105:52: C0326: Exactly one space required after comma
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                                                    ^ (bad-whitespace)
spl.py:105:71: C0326: Exactly one space required after comma
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                                                                       ^ (bad-whitespace)
spl.py:105:77: C0326: Exactly one space required after comma
                    names= ["Part Number","Revision","DSC_A", "JDELITM","DIM","Quantity", "File Name"],
                                                                             ^ (bad-whitespace)
spl.py:106:0: C0330: Wrong continued indentation (add 3 spaces).
                    index_col=False,             
                    ^  | (bad-continuation)
spl.py:106:36: C0303: Trailing whitespace (trailing-whitespace)
spl.py:107:0: C0330: Wrong continued indentation (add 3 spaces).
                    encoding='latin3', 
                    ^  | (bad-continuation)
spl.py:107:38: C0303: Trailing whitespace (trailing-whitespace)
spl.py:108:0: C0330: Wrong continued indentation (add 3 spaces).
                    error_bad_lines=False,
                    ^  | (bad-continuation)
spl.py:109:0: C0330: Wrong continued indentation (add 3 spaces).
                    na_values="-"
                    ^  | (bad-continuation)
spl.py:110:0: C0330: Wrong continued indentation.
                   )
                   ^  || (bad-continuation)
spl.py:115:0: C0301: Line too long (111/100) (line-too-long)
spl.py:115:34: C0326: Exactly one space required after comma
    df = df.groupby(['part_number','revision','dsc_a','jdelitm','file_name'], as_index=False)['quantity'].sum()
                                  ^ (bad-whitespace)
spl.py:115:45: C0326: Exactly one space required after comma
    df = df.groupby(['part_number','revision','dsc_a','jdelitm','file_name'], as_index=False)['quantity'].sum()
                                             ^ (bad-whitespace)
spl.py:115:53: C0326: Exactly one space required after comma
    df = df.groupby(['part_number','revision','dsc_a','jdelitm','file_name'], as_index=False)['quantity'].sum()
                                                     ^ (bad-whitespace)
spl.py:115:63: C0326: Exactly one space required after comma
    df = df.groupby(['part_number','revision','dsc_a','jdelitm','file_name'], as_index=False)['quantity'].sum()
                                                               ^ (bad-whitespace)
spl.py:116:39: C0326: No space allowed before comma
    df = df.replace(r'^-?\s+$', np.nan ,regex=True)
                                       ^ (bad-whitespace)
spl.py:116:39: C0326: Exactly one space required after comma
    df = df.replace(r'^-?\s+$', np.nan ,regex=True)
                                       ^ (bad-whitespace)
spl.py:117:40: C0326: Exactly one space required after comma
    df = df.dropna(subset=['part_number','jdelitm'])
                                        ^ (bad-whitespace)
spl.py:137:12: C0326: Exactly one space required after comma
    for rang,color in color_bg.items():
            ^ (bad-whitespace)
spl.py:138:36: C0303: Trailing whitespace (trailing-whitespace)
spl.py:139:13: C0326: Exactly one space required after comma
    for colum,data in dict_header.items():
             ^ (bad-whitespace)
spl.py:145:60: C0303: Trailing whitespace (trailing-whitespace)
spl.py:146:12: C0326: Exactly one space required after comma
    for rang,color in color_bg.items():
            ^ (bad-whitespace)
spl.py:147:36: C0303: Trailing whitespace (trailing-whitespace)
spl.py:148:13: C0326: Exactly one space required after comma
    for colum,data in dict_header.items():
             ^ (bad-whitespace)
spl.py:179:31: C0303: Trailing whitespace (trailing-whitespace)
spl.py:183:59: C0303: Trailing whitespace (trailing-whitespace)
spl.py:204:7: C0326: Exactly one space required before assignment
    spl= spl[~spl["part_number"].str.contains(r"\d{6}_[P|A]?\d{1}").values]
       ^ (bad-whitespace)
spl.py:211:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:213:46: C0326: No space allowed around keyword argument assignment
def filtering_assemblies(data, asm_exceptions = r"EEG58C6000A-.*"):
                                              ^ (bad-whitespace)
spl.py:215:0: C0301: Line too long (150/100) (line-too-long)
spl.py:215:25: C0326: No space allowed after bracket
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                         ^ (bad-whitespace)
spl.py:215:28: C0326: No space allowed after bracket
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                            ^ (bad-whitespace)
spl.py:215:73: C0326: Exactly one space required after comparison
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                                                                         ^^ (bad-whitespace)
spl.py:215:115: C0326: No space allowed after bracket
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                                                                                                                   ^ (bad-whitespace)
spl.py:215:133: C0326: No space allowed before comma
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                                                                                                                                     ^ (bad-whitespace)
spl.py:215:148: C0326: No space allowed before bracket
    data_remaining = data[ ~( (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True)) )]
                                                                                                                                                    ^ (bad-whitespace)
spl.py:216:0: C0301: Line too long (143/100) (line-too-long)
spl.py:216:23: C0326: No space allowed after bracket
    data_removed = data[ (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True))]
                       ^ (bad-whitespace)
spl.py:216:68: C0326: Exactly one space required after comparison
    data_removed = data[ (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True))]
                                                                    ^^ (bad-whitespace)
spl.py:216:110: C0326: No space allowed after bracket
    data_removed = data[ (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True))]
                                                                                                              ^ (bad-whitespace)
spl.py:216:128: C0326: No space allowed before comma
    data_removed = data[ (data.unit_of_measure.isna()) & (data.type =='asm') & (~data.part_number.str.contains( asm_exceptions  , regex=True))]
                                                                                                                                ^ (bad-whitespace)
spl.py:217:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:223:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:225:0: C0301: Line too long (183/100) (line-too-long)
spl.py:225:88: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                        ^ (bad-whitespace)
spl.py:225:110: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                                              ^ (bad-whitespace)
spl.py:225:123: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                                                           ^ (bad-whitespace)
spl.py:225:133: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                                                                     ^ (bad-whitespace)
spl.py:225:150: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                                                                                      ^ (bad-whitespace)
spl.py:225:161: C0326: Exactly one space required after comma
def filtering_electric(data, c1=["Electric Component"], c2=["Cable Tray & Cable Carrier","Conduits & fittings","Enclosures","Sensors","Lights & bulbs","Switches","General hardware"]):
                                                                                                                                                                 ^ (bad-whitespace)
spl.py:229:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:235:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:241:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:247:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:253:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:259:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:261:42: C0326: No space allowed before keyword argument assignment
def filtering_pneumatic(data, jde_numbers =['216078', '216120', '216081', '162463']):
                                          ^ (bad-whitespace)
spl.py:265:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:269:0: C0301: Line too long (102/100) (line-too-long)
spl.py:270:86: C0326: No space allowed before comma
    data_removed = data[data["description_1"].str.contains(r"PNEU\.F\.R\.L", na=False , regex=True)]
                                                                                      ^ (bad-whitespace)
spl.py:271:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:275:0: C0301: Line too long (135/100) (line-too-long)
spl.py:276:0: C0301: Line too long (133/100) (line-too-long)
spl.py:276:119: C0326: No space allowed before comma
    data_removed = data[data["description_1"].str.contains(r"PNEU.VALVE\sMANIFOLD\s[\d/\d\:\d{2}|\d\:\d{2}]", na=False , regex=True)]
                                                                                                                       ^ (bad-whitespace)
spl.py:277:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:283:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:289:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:295:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:297:0: C0301: Line too long (106/100) (line-too-long)
spl.py:301:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:307:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:313:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:319:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:325:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:331:27: C0326: No space allowed before comma
    return (data_remaining , data_removed)
                           ^ (bad-whitespace)
spl.py:342:29: C0303: Trailing whitespace (trailing-whitespace)
spl.py:348:8: C0326: No space allowed before comma
    spl , nuts = filtering_nuts(spl);print(filtering_nuts.__doc__)
        ^ (bad-whitespace)
spl.py:349:8: C0326: No space allowed before comma
    spl , assemblies = filtering_assemblies(spl);print(filtering_assemblies.__doc__)
        ^ (bad-whitespace)
spl.py:350:8: C0326: No space allowed before comma
    spl , plates = filtering_plates(spl);print(filtering_plates.__doc__)
        ^ (bad-whitespace)
spl.py:351:8: C0326: No space allowed before comma
    spl , elec = filtering_electric(spl);print(filtering_electric.__doc__)
        ^ (bad-whitespace)
spl.py:352:8: C0326: No space allowed before comma
    spl , divers = filtering_bin(spl);print(filtering_bin.__doc__)
        ^ (bad-whitespace)
spl.py:353:8: C0326: No space allowed before comma
    spl , robot = filtering_robot(spl);print(filtering_robot.__doc__)
        ^ (bad-whitespace)
spl.py:354:8: C0326: No space allowed before comma
    spl , grommet = filtering_grommet(spl);print(filtering_grommet.__doc__)
        ^ (bad-whitespace)
spl.py:355:0: C0301: Line too long (105/100) (line-too-long)
spl.py:355:8: C0326: No space allowed before comma
    spl , factory_furniture = filtering_factory_furniture(spl);print(filtering_factory_furniture.__doc__)
        ^ (bad-whitespace)
spl.py:356:8: C0326: No space allowed before comma
    spl , industrial = filtering_industrial(spl);print(filtering_industrial.__doc__)
        ^ (bad-whitespace)
spl.py:357:8: C0326: No space allowed before comma
    spl , pneumatic = filtering_pneumatic(spl);print(filtering_pneumatic.__doc__)
        ^ (bad-whitespace)
spl.py:358:8: C0326: No space allowed before comma
    spl , pneu_frl = filtering_pneu_frl(spl);print(filtering_pneu_frl.__doc__)
        ^ (bad-whitespace)
spl.py:359:8: C0326: No space allowed before comma
    spl , pneu_manifold = filtering_pneu_manifold(spl);print(filtering_pneu_manifold.__doc__)
        ^ (bad-whitespace)
spl.py:360:8: C0326: No space allowed before comma
    spl , par = filtering_par(spl);print(filtering_par.__doc__)
        ^ (bad-whitespace)
spl.py:361:0: C0301: Line too long (108/100) (line-too-long)
spl.py:361:8: C0326: No space allowed before comma
    spl , timing_belt_sheave = filtering_timing_belt_sheave(spl);print(filtering_timing_belt_sheave.__doc__)
        ^ (bad-whitespace)
spl.py:362:8: C0326: No space allowed before comma
    spl , cable_carrier = filtering_cable_carrier(spl);print(filtering_cable_carrier.__doc__)
        ^ (bad-whitespace)
spl.py:363:0: C0301: Line too long (105/100) (line-too-long)
spl.py:363:8: C0326: No space allowed before comma
    spl , motor_shrink_disk = filtering_motor_shrink_disk(spl);print(filtering_motor_shrink_disk.__doc__)
        ^ (bad-whitespace)
spl.py:364:0: C0301: Line too long (114/100) (line-too-long)
spl.py:364:8: C0326: No space allowed before comma
    spl , gearmotor_servomotor = filtering_gearmotor_servomotor(spl);print(filtering_gearmotor_servomotor.__doc__)
        ^ (bad-whitespace)
spl.py:365:8: C0326: No space allowed before comma
    spl , gearbox = filtering_gearbox(spl);print(filtering_gearbox.__doc__)
        ^ (bad-whitespace)
spl.py:366:8: C0326: No space allowed before comma
    spl , clamps = filtering_clamps(spl);print(filtering_clamps.__doc__)
        ^ (bad-whitespace)
spl.py:367:8: C0326: No space allowed before comma
    spl , quincaillery = filtering_quincaillery(spl);print(filtering_quincaillery.__doc__)
        ^ (bad-whitespace)
spl.py:368:0: C0301: Line too long (108/100) (line-too-long)
spl.py:368:8: C0326: No space allowed before comma
    spl , inside_gripper = filtering_parts_inside_gripper(spl);print(filtering_parts_inside_gripper.__doc__)
        ^ (bad-whitespace)
spl.py:370:0: C0301: Line too long (273/100) (line-too-long)
spl.py:370:97: C0326: Exactly one space required after comma
    groupe_to_concat = [nuts, assemblies, plates, elec, divers, robot, grommet, factory_furniture,industrial, pneumatic, par, timing_belt_sheave, cable_carrier, motor_shrink_disk, gearmotor_servomotor, gearbox, clamps, quincaillery, pneu_frl, pneu_manifold, inside_gripper]
                                                                                                 ^ (bad-whitespace)
spl.py:371:41: C0326: No space allowed before comma
    garbage = pd.concat(groupe_to_concat , ignore_index=True).sort_values('module',ascending=True)
                                         ^ (bad-whitespace)
spl.py:371:82: C0326: Exactly one space required after comma
    garbage = pd.concat(groupe_to_concat , ignore_index=True).sort_values('module',ascending=True)
                                                                                  ^ (bad-whitespace)
spl.py:373:0: C0330: Wrong continued indentation (add 2 spaces).
        f"shape spl:\t{spl.shape[0]}\n"
        ^ | (bad-continuation)
spl.py:376:32: C0326: No space allowed before comma
    creating_excel(spl, garbage ,'auto.xlsx')
                                ^ (bad-whitespace)
spl.py:376:32: C0326: Exactly one space required after comma
    creating_excel(spl, garbage ,'auto.xlsx')
                                ^ (bad-whitespace)
spl.py:380:0: C0303: Trailing whitespace (trailing-whitespace)
spl.py:382:27: C0326: No space allowed before comma
    generating_spl(JDEPATH ,".")
                           ^ (bad-whitespace)
spl.py:382:27: C0326: Exactly one space required after comma
    generating_spl(JDEPATH ,".")
                           ^ (bad-whitespace)
spl.py:383:0: C0305: Trailing newlines (trailing-newlines)
spl.py:14:0: W0401: Wildcard import spareparts.parameters (wildcard-import)
spl.py:18:0: W0404: Reimport 'load_workbook' (imported line 16) (reimported)
spl.py:21:0: C0103: Constant name "boulonnerie_prp1" doesn't conform to UPPER_CASE naming style (invalid-name)
spl.py:22:0: C0103: Constant name "plates_prp1" doesn't conform to UPPER_CASE naming style (invalid-name)
spl.py:23:0: C0103: Constant name "electric_prp1" doesn't conform to UPPER_CASE naming style (invalid-name)
spl.py:24:0: C0103: Constant name "electric_prp2" doesn't conform to UPPER_CASE naming style (invalid-name)
spl.py:25:0: C0103: Constant name "bin_prp1" doesn't conform to UPPER_CASE naming style (invalid-name)
spl.py:37:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:44:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:48:0: C0112: Empty function docstring (empty-docstring)
spl.py:52:8: C0103: Variable name "t1" doesn't conform to snake_case naming style (invalid-name)
spl.py:53:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:54:8: C0103: Variable name "t2" doesn't conform to snake_case naming style (invalid-name)
spl.py:69:0: C0112: Empty function docstring (empty-docstring)
spl.py:73:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:80:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:84:0: C0112: Empty function docstring (empty-docstring)
spl.py:88:8: R1705: Unnecessary "else" after "return" (no-else-return)
spl.py:98:0: C0112: Empty function docstring (empty-docstring)
spl.py:101:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:115:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:116:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:117:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:124:0: C0112: Empty function docstring (empty-docstring)
spl.py:130:0: C0103: Argument name "df" doesn't conform to snake_case naming style (invalid-name)
spl.py:130:0: C0112: Empty function docstring (empty-docstring)
spl.py:132:4: C0103: Variable name "wb" doesn't conform to snake_case naming style (invalid-name)
spl.py:134:4: E1101: Instance of 'int' has no 'range' member (no-member)
spl.py:136:4: E1101: Instance of 'int' has no 'range' member (no-member)
spl.py:140:8: E1101: Instance of 'int' has no 'range' member (no-member)
spl.py:141:4: E1101: Instance of 'int' has no 'autofit' member (no-member)
spl.py:176:0: C0111: Missing function docstring (missing-docstring)
spl.py:178:4: C0103: Variable name "wb" doesn't conform to snake_case naming style (invalid-name)
spl.py:180:8: C0103: Variable name "ws" doesn't conform to snake_case naming style (invalid-name)
spl.py:189:0: C0111: Missing function docstring (missing-docstring)
spl.py:190:4: C0103: Variable name "wb" doesn't conform to snake_case naming style (invalid-name)
spl.py:191:8: C0103: Variable name "s" doesn't conform to snake_case naming style (invalid-name)
spl.py:192:8: C0103: Variable name "ws" doesn't conform to snake_case naming style (invalid-name)
spl.py:193:8: C0103: Variable name "MAX_" doesn't conform to snake_case naming style (invalid-name)
spl.py:202:0: C0103: Function name "filtering_part_P1_or_A1_format" doesn't conform to snake_case naming style (invalid-name)
spl.py:207:0: W0102: Dangerous default value boulonnerie_prp1 (builtins.list) as argument (dangerous-default-value)
spl.py:219:0: W0102: Dangerous default value plates_prp1 (builtins.list) as argument (dangerous-default-value)
spl.py:225:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:225:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:225:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:225:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:231:0: W0102: Dangerous default value bin_prp1 (builtins.list) as argument (dangerous-default-value)
spl.py:237:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:243:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:243:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:243:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:243:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:249:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:249:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:249:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:249:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:255:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:255:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:255:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:255:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:261:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:279:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:285:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:291:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:291:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:291:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:291:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:297:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:297:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:297:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:297:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:303:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:303:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:303:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:303:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:309:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:309:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:309:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:309:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:315:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:321:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:321:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
spl.py:321:0: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
spl.py:321:0: C0103: Argument name "c2" doesn't conform to snake_case naming style (invalid-name)
spl.py:327:0: W0102: Dangerous default value contents_of_gripper (builtins.list) as argument (dangerous-default-value)
spl.py:335:0: R0914: Too many local variables (30/15) (too-many-locals)
spl.py:342:4: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
spl.py:347:46: C0321: More than one statement on a single line (multiple-statements)
spl.py:348:37: C0321: More than one statement on a single line (multiple-statements)
spl.py:349:49: C0321: More than one statement on a single line (multiple-statements)
spl.py:350:41: C0321: More than one statement on a single line (multiple-statements)
spl.py:351:41: C0321: More than one statement on a single line (multiple-statements)
spl.py:352:38: C0321: More than one statement on a single line (multiple-statements)
spl.py:353:39: C0321: More than one statement on a single line (multiple-statements)
spl.py:354:43: C0321: More than one statement on a single line (multiple-statements)
spl.py:355:63: C0321: More than one statement on a single line (multiple-statements)
spl.py:356:49: C0321: More than one statement on a single line (multiple-statements)
spl.py:357:47: C0321: More than one statement on a single line (multiple-statements)
spl.py:358:45: C0321: More than one statement on a single line (multiple-statements)
spl.py:359:55: C0321: More than one statement on a single line (multiple-statements)
spl.py:360:35: C0321: More than one statement on a single line (multiple-statements)
spl.py:361:65: C0321: More than one statement on a single line (multiple-statements)
spl.py:362:55: C0321: More than one statement on a single line (multiple-statements)
spl.py:363:63: C0321: More than one statement on a single line (multiple-statements)
spl.py:364:69: C0321: More than one statement on a single line (multiple-statements)
spl.py:365:43: C0321: More than one statement on a single line (multiple-statements)
spl.py:366:41: C0321: More than one statement on a single line (multiple-statements)
spl.py:367:53: C0321: More than one statement on a single line (multiple-statements)
spl.py:368:63: C0321: More than one statement on a single line (multiple-statements)
spl.py:335:0: R0915: Too many statements (61/50) (too-many-statements)
spl.py:9:0: W0611: Unused glob imported from glob (unused-import)
spl.py:10:0: W0611: Unused import logging (unused-import)
spl.py:15:0: W0611: Unused Workbook imported from openpyxl (unused-import)
spl.py:15:0: C0411: third party import "from openpyxl import Workbook" should be placed before "from spareparts.parameters import *" (wrong-import-order)
spl.py:16:0: C0411: third party import "from openpyxl import load_workbook" should be placed before "from spareparts.parameters import *" (wrong-import-order)
spl.py:17:0: C0411: third party import "from openpyxl.styles import Alignment" should be placed before "from spareparts.parameters import *" (wrong-import-order)
spl.py:18:0: C0411: third party import "from openpyxl import load_workbook" should be placed before "from spareparts.parameters import *" (wrong-import-order)

-------------------------------------------------------------------
Your code has been rated at -0.36/10 (previous run: 8.12/10, -8.48)

